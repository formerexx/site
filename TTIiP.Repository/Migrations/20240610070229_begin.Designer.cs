// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TTIiP.Repository;

#nullable disable

namespace TTIiP.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240610070229_begin")]
    partial class begin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Alina.Models.CardNews", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Hyperlink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("SectionID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SectionID");

                    b.ToTable("CardsNews");
                });

            modelBuilder.Entity("Alina.Models.Content", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hyperlink")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("SectionItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SectioniItemID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SectionItemId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("Alina.Models.ContentsOfTables", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("HeadingId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HeadingId");

                    b.ToTable("ContentsOfTablesEnumerable");
                });

            modelBuilder.Entity("Alina.Models.Heading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentHeading")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("ContentID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ContentID");

                    b.ToTable("Headings");
                });

            modelBuilder.Entity("Alina.Models.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Alina.Models.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Alina.Models.SectionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SectionID")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SectionID");

                    b.ToTable("SectionItems");
                });

            modelBuilder.Entity("Alina.Models.CardNews", b =>
                {
                    b.HasOne("Alina.Models.News", "News")
                        .WithOne("CardNews")
                        .HasForeignKey("Alina.Models.CardNews", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alina.Models.Section", "Section")
                        .WithMany("CardNews")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Alina.Models.Content", b =>
                {
                    b.HasOne("Alina.Models.SectionItem", "SectionItem")
                        .WithMany("Contents")
                        .HasForeignKey("SectionItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SectionItem");
                });

            modelBuilder.Entity("Alina.Models.ContentsOfTables", b =>
                {
                    b.HasOne("Alina.Models.Heading", "Heading")
                        .WithMany()
                        .HasForeignKey("HeadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heading");
                });

            modelBuilder.Entity("Alina.Models.Heading", b =>
                {
                    b.HasOne("Alina.Models.Content", "Content")
                        .WithMany("Headings")
                        .HasForeignKey("ContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Alina.Models.SectionItem", b =>
                {
                    b.HasOne("Alina.Models.Section", "Section")
                        .WithMany("SectionItems")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Alina.Models.Content", b =>
                {
                    b.Navigation("Headings");
                });

            modelBuilder.Entity("Alina.Models.News", b =>
                {
                    b.Navigation("CardNews")
                        .IsRequired();
                });

            modelBuilder.Entity("Alina.Models.Section", b =>
                {
                    b.Navigation("CardNews");

                    b.Navigation("SectionItems");
                });

            modelBuilder.Entity("Alina.Models.SectionItem", b =>
                {
                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
